@page "/"
@inject Clypeus.Services.Interfaces.Medicinals.IDrugService drugService

    <div class="container">
        
        <h1 style="margin-top:1.5rem;margin-bottom:1.5rem">Drugs</h1>
        <FilterBox Debounce="1000" FilterString="@FilterString" FilterCleared="@FilterHasBeenCleared" FilterTextChanged="@FilterHasBeenChanged"></FilterBox>
      
        @if (drugs == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <table class="table">
                <thead>
                    <tr>
                        <th class="col-sm-1 col-md-1 col-lg-1">Code</th>
                        <th class="col-sm-2 col-md-2 col-lg-2">Atc</th>
                        <th class="col-sm-9 col-md-9 col-lg-9">Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var drug in drugs)
                    {
                        <tr>
                            <td>@drug.Code</td>
                            <td>@drug.AtcCode</td>
                            <td>@drug.Description</td>

                        </tr>
                    }
                </tbody>
            </table>
        }

        <div id="page-section" style="margin-top:1rem;margin-bottom:1rem">
            <Paging NumberOfResults=@Count ResultsPerPage=Convert.ToInt32(Clypeus.DataTransfer.Resources.GenericResources.RecordsPerPage) PageChanged="@PageChanged"></Paging>
        </div>


    </div>

@code {
    IEnumerable<Clypeus.DataTransfer.ViewModels.Reference.DrugsViewModel> drugs;

    private string FilterString = "Hello";




    public int Count = 0;

    protected override async Task OnInitializedAsync()
    {
        var results = await drugService.GetDrugs();
        drugs = results.Collection;
        Count = results.Count;
    }

    protected void FilterHasBeenCleared()
    {
        System.Diagnostics.Debug.WriteLine("The filter has been cleared" + DateTime.Now);
    }

    protected void FilterHasBeenChanged(string v)
    {

        FilterString = v;
        System.Diagnostics.Debug.WriteLine("The filter has been updated to" + FilterString+ DateTime.Now);
        
    }

    protected void PageChanged(int p)
    {
        var results = drugService.GetDrugs(1, false, string.Empty, p, 15, string.Empty, true).Result;
        drugs = results.Collection;

        InvokeAsync(() =>
        {
            base.StateHasChanged();
        });
    }
}






